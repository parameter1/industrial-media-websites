import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import { getAsArray, get } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";

$ const { id, type, pageNode } = input;
$ const { GAM } = out.global;
$ const sections = getAsArray(input, "sections");
$ const alias = get(input, "primarySection.alias");
$ const displayAds = defaultValue(input.displayAds, true);
$ const showOverlay = defaultValue(input.showOverlay, false);

<theme-content-page id=id type=type>
  <@head>
    <marko-web-gtm-content-context|{ context }| id=id>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-content-context>
    <marko-web-resolve-page|{ data: content }| node=pageNode>
      <marko-web-p1-events-track-content node=content />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <if(!showOverlay && displayAds)>
      <marko-web-resolve-page|{ data: content }| node=pageNode>
        $ const aliases = hierarchyAliases(content.primarySection);
        <global-reveal-ad-handler select-all-targets=true path=GAM.getAdUnit({ name: "reskin", aliases }).path id="reveal-ad" />
        <global-fixed-ad-bottom aliases=hierarchyAliases(content.primarySection) />
      </marko-web-resolve-page>
    </if>
  </@above-container>
  <@page>
    <marko-web-resolve-page|{ data: content }| node=pageNode>
      $ const aliases = hierarchyAliases(content.primarySection);
      <marko-web-page-wrapper>
        <for|s| of=sections>
          <@section|{ blockName }| modifiers=s.modifiers>
            <${s.renderBody}
              block-name=blockName
              content=content
              aliases=aliases
            />
          </@section>
        </for>
      </marko-web-page-wrapper>
    </marko-web-resolve-page>
  </@page>
<@below-page>
    <if(!showOverlay)>
      <marko-web-page-container for="content" tag="div" id=id type=type modifiers=["below"]>

        <if(displayAds)>
          <!-- Refresh sticky, right-rail infinite scroll ad -->
          <marko-web-gam-refresh-ad on="load-more-in-view" slot-id="gpt-ad-rail-infinite" />
        </if>


        <marko-web-resolve-page|{ data: content, resolved }| node=pageNode>
          $ const section = content.primarySection;
          <marko-web-page-wrapper>
            <if(displayAds)>
              <@section|{ aliases }| modifiers=["first-sm"]>
                <theme-gam-define-display-ad
                  name="billboard"
                  position="content_page"
                  aliases=aliases
                  modifiers=["inter-block"]
                />
              </@section>
            </if>
            <@section|{ aliases }|>
              <div class="row">
                <div class="col-lg-12 infinite-scroll-target">
                  <global-content-page-load-more-block
                    aliases=aliases
                    limit=15
                  >
                    <@content id=id type=type name=content.name />
                    <@section id=section.id name=section.name />
                    <@native-x indexes=[0] name="default" aliases=aliases />
                  </global-content-page-load-more-block>
                </div>
              </div>
            </@section>
          </marko-web-page-wrapper>
        </marko-web-resolve-page>
      </marko-web-page-container>
    </if>
  </@below-page>
</theme-content-page>
